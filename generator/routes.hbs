/**
* @fileoverview {{> entityClass}} routes
*/

//Imports
import Router from '@koa/router';
import {DefaultState} from 'koa';
import controller, {{literal '{'}}{{> entityClass}}Context{{literal '}'}} from '../controllers/{{> entityPluralObject}}';
import {{literal '{'}}{{> entityClass}}{{literal '}'}} from '../models/{{> entityPluralObject}}';

//Router setup
const router = new Router<DefaultState, {{> entityClass}}Context>();

router
{{#each (uniqueParameters)}}
  //Route level {{> entityLower}}
  .param('{{name}}', async ({{name}}, ctx: {{> entityClass}}Context, next) =>
  {
    //Get the {{> entityLower}} by its {{name}}
{{#unless (equals name "id") }}
    const {{> entityObject}} = await {{> entityClass}}.findOne({
      {{name}}
    });
{{/unless}}
{{#if (equals name "id") }}
    const {{> entityObject}} = await {{> entityClass}}.findById({{name}});
{{/if}}

    //Ensure the {{> entityLower}} is valid
    if ({{> entityObject}} == null)
    {
      //Log
      ctx.log.error({ctx, id}, 'Invalid {{> entityLower}} {{name}}!');

      //Reject
      ctx.throw('Invalid {{> entityLower}} {{name}}', 402);
    }

    ctx.{{> entityObject}} = {{> entityObject}};

    return next();
  })

{{/each}}
{{#each operations}}
  //{{{description}}}
  .{{method}}('{{parameter path}}', controller.{{inflect 'camelize' name}}){{#if @last}};{{/if}}
{{#unless @last}}

{{/unless}}
{{/each}}

//Export
export default router;